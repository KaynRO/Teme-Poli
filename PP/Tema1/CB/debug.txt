text = "class Double\nclass Int\nclass String\nclass Char\nclass Void\nclass Float\nclass Boo\nclass Foo\nnewvar var1 = Double\nnewvar var2    = String\nnewvar var3  =   String\nnewvar prod = Void\nnewvar cool=Boo\nnewvar coco = Fold\nnewvar sum =String\nclass Human \nclass Professor extends Human\nclass Student extends Human\nclass A extends Human\nclass Professor    extends  Human\nclass Teacher extends NonExistent\nInt Global::apply (Int,Double,Double)\nInt Clasa::apply (Double,Double)\nString Global::print ()\nDouble Professor::apply (Int,String)\nVoid Student::apply  (Maybe)\nInt Global :: add (Int,Int)\nList Profesor::rotate (Int,List)\nInt Student::count (List)\nDouble Global::diff (Double, Double)\nString Professor::teach (String)\nDouble Professor::teach (Int)\nInt Professor::teach ()\nInt Human :: apply Int (Double, TODO)\nInt Global::increment (Int)\nFooBar Global::nop (Int)\nTODO Professor::biss (Void)\nTODO Student::hello (Void)\nInt Student::homework(Double,Double)\nDouble Student::homework(Int,Int)\nDouble Student::homework(Int,Int,Int)"
instr = parse text
p1 = initEmptyProgram
p2 = interpret (head $drop 0 instr) p1
p3 = interpret (head $drop 1 instr) p2
p4 = interpret (head $drop 2 instr) p3
p5 = interpret (head $drop 3 instr) p4
p6 = interpret (head $drop 4 instr) p5
p7 = interpret (head $drop 5 instr) p6
p8 = interpret (head $drop 6 instr) p7
p9 = interpret (head $drop 7 instr) p8
p10 = interpret (head $drop 8 instr) p9
p11 = interpret (head $drop 9 instr) p10
p12 = interpret (head $drop 10 instr) p11
p13 = interpret (head $drop 11 instr) p12
p14 = interpret (head $drop 12 instr) p13
p15 = interpret (head $drop 13 instr) p14
p16 = interpret (head $drop 14 instr) p15
p17 = interpret (head $drop 15 instr) p16
p18 = interpret (head $drop 16 instr) p17
p19 = interpret (head $drop 17 instr) p18
p20 = interpret (head $drop 18 instr) p19
p21 = interpret (head $drop 19 instr) p20
p22 = interpret (head $drop 20 instr) p21
p23 = interpret (head $drop 21 instr) p22
p24 = interpret (head $drop 22 instr) p23
p25 = interpret (head $drop 23 instr) p24
p26 = interpret (head $drop 24 instr) p25
p27 = interpret (head $drop 25 instr) p26
p28 = interpret (head $drop 26 instr) p27
p29 = interpret (head $drop 27 instr) p28
p30 = interpret (head $drop 28 instr) p29
p31 = interpret (head $drop 29 instr) p30
p32 = interpret (head $drop 30 instr) p31
p33 = interpret (head $drop 31 instr) p32
p34 = interpret (head $drop 32 instr) p33
p35 = interpret (head $drop 33 instr) p34
p36 = interpret (head $drop 34 instr) p35
p37 = interpret (head $drop 35 instr) p36
p38 = interpret (head $drop 36 instr) p37
p39 = interpret (head $drop 37 instr) p38
p40 = interpret (head $drop 38 instr) p39